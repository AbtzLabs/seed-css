@function parseInt($n) {
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px : ();
  $rem: ();

  @each $value in $values {

    @if $value == 0 or $value == auto {
      $px : append($px , $value);
      $rem: append($rem, $value);
    }

    @else {
      $unit: unit($value);
      $val: parseInt($value);

      @if $unit == "px" {
        $px : append($px,  $value);
        $rem: append($rem, ($val / 10 + rem));
      }

      @if $unit == "rem" {
        $px : append($px,  ($val * 10 + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {
    #{$property}: $px;
  } @else {
    #{$property}: $px;
    #{$property}: $rem;
  }
}

@mixin grid-make-cols( $size ) {
  @for $i from 1 through 12 {
    &.#{$size}-#{$i} {
      // &:not([class^="offset-"]):not([class*=" offset-"]) {
      //   margin-left: -.35rem;
      // }

      @if $i == 12 {
        width: 100%;
      } @else if $i == 1 {
        width: calc(100% / 12);
      } @else {
        width: calc(100% / 12 * #{$i});
      }
    }
  }

  @for $i from 1 through 12 {
    &.offset-#{$i} {
      @if $i == 12 {
        margin-left: 100%;
      } @else if $i == 1 {
        margin-left: calc(100% / 12);
      } @else {
        margin-left: calc(100% / 12 * #{$i});
      }
    }
  }
}

@mixin trans($prop, $time, $animation) {
  -webkit-transition: $prop $time $animation;
  -moz-transition: $prop $time $animation;
  -ms-transition: $prop $time $animation;
  -o-transition: $prop $time $animation;
  transition: $prop $time $animation;
}

@mixin transf($prop) {
  -webkit-transform: $prop;
  -moz-transform: $prop;
  -ms-transformn: $prop;
  -o-transform: $prop;
  transform: $prop;
}

@mixin box-shadow ($value) {
  -webkit-box-shadow: $value;
  -moz-box-shadow: $value;
  -ms-box-shadow: $value;
  -o-box-shadow: $value;
  box-shadow: $value;
}

@mixin appearance($value) {
  -webkit-appearance: $value;
  -moz-appearance: $value;
  -ms-appearance: $value;
  -o-appearance: $value;
  appearance: $value;
}
